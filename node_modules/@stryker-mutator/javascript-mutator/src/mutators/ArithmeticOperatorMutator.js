"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types = require("@babel/types");
const NodeGenerator_1 = require("../helpers/NodeGenerator");
class ArithmeticOperatorMutator {
    constructor() {
        this.operators = {
            '+': '-',
            '-': '+',
            '*': '/',
            '/': '*',
            '%': '*'
        };
        this.name = 'ArithmeticOperator';
    }
    mutate(node) {
        if (types.isBinaryExpression(node)) {
            let mutatedOperators = this.operators[node.operator];
            if (mutatedOperators) {
                if (typeof mutatedOperators === 'string') {
                    mutatedOperators = [mutatedOperators];
                }
                return mutatedOperators.map(mutatedOperator => [
                    node,
                    NodeGenerator_1.NodeGenerator.createMutatedCloneWithProperties(node, { operator: mutatedOperator })
                ]);
            }
        }
        return [];
    }
}
exports.default = ArithmeticOperatorMutator;
//# sourceMappingURL=ArithmeticOperatorMutator.js.map