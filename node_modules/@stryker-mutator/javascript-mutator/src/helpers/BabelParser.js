"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const generator_1 = require("@babel/generator");
const parser_1 = require("@babel/parser");
const traverse_1 = require("@babel/traverse");
const plugin_1 = require("@stryker-mutator/api/plugin");
class BabelParser {
    constructor(log, mutatorDescriptor) {
        this.log = log;
        this.options = this.createOptions(mutatorDescriptor.plugins);
    }
    parse(code) {
        return parser_1.parse(code, this.options);
    }
    createOptions(pluginOverrides) {
        const plugins = pluginOverrides || [
            'asyncGenerators',
            'bigInt',
            'classProperties',
            'dynamicImport',
            'flow',
            'jsx',
            'objectRestSpread',
            ['decorators', { decoratorsBeforeExport: true }]
        ];
        const options = {
            plugins,
            sourceType: 'unambiguous'
        };
        if (this.log.isDebugEnabled()) {
            this.log.debug(`Using options ${JSON.stringify(options)}`);
        }
        return options;
    }
    getNodes(ast) {
        const nodes = [];
        traverse_1.default(ast, {
            enter(path) {
                const node = path.node;
                node.parent = path.parent;
                Object.freeze(node);
                nodes.push(node);
            }
        });
        return nodes;
    }
    generateCode(ast) {
        return generator_1.default(ast).code;
    }
}
exports.default = BabelParser;
BabelParser.inject = plugin_1.tokens(plugin_1.commonTokens.logger, plugin_1.commonTokens.mutatorDescriptor);
//# sourceMappingURL=BabelParser.js.map