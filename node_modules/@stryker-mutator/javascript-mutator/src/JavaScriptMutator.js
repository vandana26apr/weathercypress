"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types = require("@babel/types");
const plugin_1 = require("@stryker-mutator/api/plugin");
const tokens_1 = require("./helpers/tokens");
class JavaScriptMutator {
    constructor(log, mutators, parser) {
        this.log = log;
        this.mutators = mutators;
        this.parser = parser;
    }
    mutate(inputFiles) {
        const mutants = [];
        inputFiles.forEach(file => {
            const ast = this.parser.parse(file.textContent);
            this.parser.getNodes(ast).forEach(node => {
                this.mutators.forEach(mutator => {
                    const fileName = file.name;
                    const mutatorName = mutator.name;
                    mutator.mutate(node).forEach(([original, mutation]) => {
                        if (original.start !== null && original.end !== null) {
                            const replacement = types.isNode(mutation) ? this.parser.generateCode(mutation) : mutation.raw;
                            mutants.push({
                                fileName: fileName,
                                mutatorName: mutatorName,
                                range: [original.start, original.end],
                                replacement
                            });
                            this.log.trace(`Generated mutant for mutator ${mutatorName} in file ${fileName} with replacement code "${replacement}"`);
                        }
                    });
                });
            });
        });
        return mutants;
    }
}
exports.JavaScriptMutator = JavaScriptMutator;
JavaScriptMutator.inject = plugin_1.tokens(plugin_1.commonTokens.logger, tokens_1.NODE_MUTATORS_TOKEN, tokens_1.PARSER_TOKEN);
//# sourceMappingURL=JavaScriptMutator.js.map