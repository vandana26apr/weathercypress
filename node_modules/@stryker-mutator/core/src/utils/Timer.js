"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Timer {
    constructor(now = () => new Date()) {
        this.now = now;
        this.reset();
    }
    reset() {
        this.markers = Object.create(null);
        this.start = this.now();
    }
    humanReadableElapsed() {
        const elapsedSeconds = this.elapsedSeconds();
        return Timer.humanReadableElapsedMinutes(elapsedSeconds) + Timer.humanReadableElapsedSeconds(elapsedSeconds);
    }
    elapsedSeconds() {
        const elapsedMs = this.elapsedMs();
        return Math.floor(elapsedMs / 1000);
    }
    elapsedMs(sinceMarker) {
        if (sinceMarker && this.markers[sinceMarker]) {
            return this.now().getTime() - this.markers[sinceMarker].getTime();
        }
        else {
            return this.now().getTime() - this.start.getTime();
        }
    }
    mark(name) {
        this.markers[name] = this.now();
    }
    static humanReadableElapsedSeconds(elapsedSeconds) {
        const restSeconds = elapsedSeconds % 60;
        if (restSeconds === 1) {
            return `${restSeconds} second`;
        }
        else {
            return `${restSeconds} seconds`;
        }
    }
    static humanReadableElapsedMinutes(elapsedSeconds) {
        const elapsedMinutes = Math.floor(elapsedSeconds / 60);
        if (elapsedMinutes > 1) {
            return `${elapsedMinutes} minutes `;
        }
        else if (elapsedMinutes > 0) {
            return `${elapsedMinutes} minute `;
        }
        else {
            return '';
        }
    }
}
exports.default = Timer;
//# sourceMappingURL=Timer.js.map