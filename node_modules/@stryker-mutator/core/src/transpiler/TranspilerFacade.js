"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugin_1 = require("@stryker-mutator/api/plugin");
const util_1 = require("@stryker-mutator/util");
const di_1 = require("../di");
class NamedTranspiler {
    constructor(name, transpiler) {
        this.name = name;
        this.transpiler = transpiler;
    }
}
class TranspilerFacade {
    constructor(options, pluginCreator) {
        this.innerTranspilers = options.transpilers.map(transpilerName => new NamedTranspiler(transpilerName, pluginCreator.create(transpilerName)));
    }
    transpile(files) {
        return this.performTranspileChain(files);
    }
    async performTranspileChain(input, remainingChain = this.innerTranspilers.slice()) {
        const current = remainingChain.shift();
        if (current) {
            const output = await current.transpiler.transpile(input).catch(error => {
                throw new util_1.StrykerError(`An error occurred in transpiler "${current.name}"`, error);
            });
            return this.performTranspileChain(output, remainingChain);
        }
        else {
            return input;
        }
    }
}
exports.TranspilerFacade = TranspilerFacade;
TranspilerFacade.inject = plugin_1.tokens(plugin_1.commonTokens.options, di_1.coreTokens.pluginCreatorTranspiler);
//# sourceMappingURL=TranspilerFacade.js.map