"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ProgressBar_1 = require("./ProgressBar");
const ProgressKeeper_1 = require("./ProgressKeeper");
class ProgressBarReporter extends ProgressKeeper_1.default {
    onAllMutantsMatchedWithTests(matchedMutants) {
        super.onAllMutantsMatchedWithTests(matchedMutants);
        const progressBarContent = 'Mutation testing  [:bar] :percent (elapsed: :et, remaining: :etc) :tested/:total tested (:survived survived, :timedOut timed out)';
        this.progressBar = new ProgressBar_1.default(progressBarContent, {
            complete: '=',
            incomplete: ' ',
            stream: process.stdout,
            total: this.progress.total,
            width: 50
        });
    }
    onMutantTested(result) {
        const ticksBefore = this.progress.tested;
        super.onMutantTested(result);
        const progressBarContent = Object.assign(Object.assign({}, this.progress), { et: this.getElapsedTime(), etc: this.getEtc() });
        if (ticksBefore < this.progress.tested) {
            this.tick(progressBarContent);
        }
        else {
            this.render(progressBarContent);
        }
    }
    tick(tickObj) {
        this.progressBar.tick(tickObj);
    }
    render(renderObj) {
        this.progressBar.render(renderObj);
    }
}
exports.default = ProgressBarReporter;
//# sourceMappingURL=ProgressReporter.js.map