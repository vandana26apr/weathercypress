import { StrykerOptions } from '@stryker-mutator/api/core';
import { Logger } from '@stryker-mutator/api/logging';
import PresetConfiguration from './presets/PresetConfiguration';
import PromptOption from './PromptOption';
export default class StrykerConfigWriter {
    private readonly log;
    private readonly out;
    static inject: ["logger", "out"];
    constructor(log: Logger, out: typeof console.log);
    guardForExistingConfig(): void;
    /**
     * Create stryker.conf.js based on the chosen framework and test runner
     * @function
     */
    write(selectedTestRunner: null | PromptOption, selectedTestFramework: null | PromptOption, selectedMutator: null | PromptOption, selectedTranspilers: null | PromptOption[], selectedReporters: PromptOption[], selectedPackageManager: PromptOption, additionalPiecesOfConfig: Array<Partial<StrykerOptions>>): Promise<void>;
    /**
     * Create stryker.conf.js based on the chosen preset
     * @function
     */
    writePreset(presetConfig: PresetConfiguration): Promise<void>;
    private configureTestFramework;
    private writeStrykerConfigRaw;
    private writeStrykerConfig;
    private wrapInModule;
}
//# sourceMappingURL=StrykerConfigWriter.d.ts.map