/// <reference types="node" />
import { StrykerOptions } from '@stryker-mutator/api/core';
import { Logger } from '@stryker-mutator/api/logging';
import { Injector, OptionsContext } from '@stryker-mutator/api/plugin';
import { RunOptions, RunResult, TestRunner } from '@stryker-mutator/api/test_runner';
import JestTestAdapter from './jestTestAdapters/JestTestAdapter';
export declare function jestTestRunnerFactory(injector: Injector<OptionsContext>): JestTestRunner;
export declare namespace jestTestRunnerFactory {
    var inject: ["$injector"];
}
export declare const PROCESS_ENV_TOKEN = "PROCESS_ENV_TOKEN";
export declare const JEST_TEST_ADAPTER_TOKEN = "jestTestAdapter";
export default class JestTestRunner implements TestRunner {
    private readonly log;
    private readonly processEnvRef;
    private readonly jestTestAdapter;
    private readonly jestConfig;
    private readonly enableFindRelatedTests;
    static inject: ["logger", "options", "PROCESS_ENV_TOKEN", "jestTestAdapter"];
    constructor(log: Logger, options: StrykerOptions, processEnvRef: NodeJS.ProcessEnv, jestTestAdapter: JestTestAdapter);
    run(options: RunOptions): Promise<RunResult>;
    private setNodeEnv;
    private processTestResults;
    private determineTestResultStatus;
}
//# sourceMappingURL=JestTestRunner.d.ts.map